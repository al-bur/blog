{"componentChunkName":"component---src-templates-blog-post-js","path":"/우아한테크코스/[우테코-프리코스]왜-함수(또는-메소드)의-길이가-15라인을-넘어가지-않도록-구현해야할까/","result":{"data":{"site":{"siteMetadata":{"title":"love steady","author":"albur","siteUrl":"https://al-bur.github.io","comment":{"disqusShortName":"","utterances":"al-bur/"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"2e870b8d-8314-5443-baf9-572b8684acd1","excerpt":"이 글은 입니다. 이전 포스팅에 이어서 이번 포스팅에서도 1주 차 미션의 요구사항에 대해서 탐구해봤던 것을 포스팅해보려 합니다. 왜 15라인을 넘어가지 않아야 할까? 요구사항을 보자마자 15라는 특정한 숫자는 어디서 나온 것일까?라는 생각을 하였습니다. 고민을 한 결과, 1…","html":"<p>이 글은 <code class=\"language-text\">요구사항에 대해서 의문점을 가지고 질문을 던지며 의문점을 해결해나가는 글</code>입니다.</p>\n<p>이전 포스팅에 이어서 이번 포스팅에서도 1주 차 미션의 요구사항에 대해서 탐구해봤던 것을 포스팅해보려 합니다.</p>\n<br>\n<h3 id=\"왜-15라인을-넘어가지-않아야-할까\" style=\"position:relative;\"><a href=\"#%EC%99%9C-15%EB%9D%BC%EC%9D%B8%EC%9D%84-%EB%84%98%EC%96%B4%EA%B0%80%EC%A7%80-%EC%95%8A%EC%95%84%EC%95%BC-%ED%95%A0%EA%B9%8C\" aria-label=\"왜 15라인을 넘어가지 않아야 할까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>왜 15라인을 넘어가지 않아야 할까?</h3>\n<hr>\n<p>요구사항을 보자마자 15라는 특정한 숫자는 어디서 나온 것일까?라는 생각을 하였습니다.</p>\n<p>고민을 한 결과, 15라는 숫자는 중요한 것이 아니라 함수의 길이를 최대한 짧게!라는 메시지를 담는 게 아닐까 싶었습니다.</p>\n<br>\n<h3 id=\"그렇다면-왜-함수를-짧게-해야할까\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%A0%87%EB%8B%A4%EB%A9%B4-%EC%99%9C-%ED%95%A8%EC%88%98%EB%A5%BC-%EC%A7%A7%EA%B2%8C-%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C\" aria-label=\"그렇다면 왜 함수를 짧게 해야할까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그렇다면, 왜 함수를 짧게 해야할까?</h3>\n<hr>\n<p>이것에 대한 이유는 이전 포스팅에서 살펴보았던 <code class=\"language-text\">코드의 depth를 2</code>까지만 허용한다의 이유와 같지 않을까 싶었습니다.</p>\n<p>함수 내부의 코드를 적게 작성하면서 함수가 어떤 역할을 하는지 쉽게 알아볼 수 있도록 하기 위해서가 아닐까 싶습니다.</p>\n<br>\n<h3 id=\"저의-추론을-검증하기-위해-구글링을-해보았습니다\" style=\"position:relative;\"><a href=\"#%EC%A0%80%EC%9D%98-%EC%B6%94%EB%A1%A0%EC%9D%84-%EA%B2%80%EC%A6%9D%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4-%EA%B5%AC%EA%B8%80%EB%A7%81%EC%9D%84-%ED%95%B4%EB%B3%B4%EC%95%98%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"저의 추론을 검증하기 위해 구글링을 해보았습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>저의 추론을 검증하기 위해 구글링을 해보았습니다.</h3>\n<hr>\n<p>아래의 글에서는 20~30줄을 권장하고 있습니다. 함수의 line을 짧게 가져가라라고 하는데 이유는 하나의 함수에서는 하나의 역할을 해야 하고 그렇게 된다면 가독성 있는 코드를 작성할 수 있다고 합니다.</p>\n<p><a href=\"https://medium.com/swlh/javascript-code-styling-best-practices-maximum-function-length-callbacks-parameters-26098e465cd1\">JavaScript Code Styling Best Practices — Maximum Function Length, Callbacks, Parameters</a></p>\n<br>\n<p>아래의 글은 한국에서 유명한 리팩터링의 저자인 Martin Fowler가 함수의 길이에 대해 작성한 포스트입니다.</p>\n<p>Martin Folower 또한 최대한 작은 함수를 만들고 코드의 가독성을 높여라라고 말하고 있습니다.</p>\n<p><a href=\"https://martinfowler.com/bliki/FunctionLength.html\">bliki: FunctionLength</a></p>\n<p>제가 많고 많은 글 중에서 이 분의 글을 인용하는 이유는 유명해서가 아니라 이 분이 짧은 함수의 길이를 <code class=\"language-text\">사용하는 것에 대해 생각할만한 포인트를 던져줬기 때문</code>입니다.</p>\n<blockquote>\n<p>Some people are concerned about short functions because they are worried about the performance cost of a function call.</p>\n</blockquote>\n<p>즉, 함수의 길이를 최대한 짧게 가져가기 위해서는 기존보다 더 많은 함수를 만들어야 하고 그렇다면 함수를 호출하는 일이 더 많아질 텐데 성능에 악영향이 있을 것 아니냐라고 사람들이 걱정을 한다는 글입니다.</p>\n<br>\n<h3 id=\"그래서-또-찾아보았습니다\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9E%98%EC%84%9C-%EB%98%90-%EC%B0%BE%EC%95%84%EB%B3%B4%EC%95%98%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"그래서 또 찾아보았습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그래서, 또 찾아보았습니다.</h3>\n<hr>\n<p>함수 호출에 따른 성능 저하에 대해 찾아본 결과 여러 글을 찾을 수 있었습니다. 결론은, 함수를 호출하는 정도가 성능에 영향을 끼치는 경우는 상황에 따라 다르다고 합니다.</p>\n<p><a href=\"https://softwareengineering.stackexchange.com/questions/318055/how-much-do-function-calls-impact-performance\">“How much do function calls impact performance?”</a></p>\n<p><a href=\"https://stackoverflow.com/questions/11168939/function-calls-are-expensive-vs-keep-functions-small\">“Function calls are expensive” vs. “Keep functions small”</a></p>\n<br>\n<h3 id=\"글을-마무리하며\" style=\"position:relative;\"><a href=\"#%EA%B8%80%EC%9D%84-%EB%A7%88%EB%AC%B4%EB%A6%AC%ED%95%98%EB%A9%B0\" aria-label=\"글을 마무리하며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>글을 마무리하며</h3>\n<hr>\n<p>결론적으로, 가독성(작은 함수, 잦은 호출) vs 성능(큰 함수, 적은 호출) 이 두 가지는 서로 trade off인 관계인듯합니다. 아마 개발자의 스타일에 맞게 둘 중 하나를 고르거나 절충적인 방법을 찾아서 코드를 작성하지 않을까 생각합니다. 저는 성능을 고려하여 최적화된 코드를 짤 단계는 아니라고 생각됩니다. 그보다 다른 사람들과의 협업을 위해 최대한 가독성 있는 코드를 짜고 싶습니다. 그래서 저는 미션의 요구사항인 <code class=\"language-text\">함수의 길이가 15가 넘지 않게 하라</code>를 학습하여 앞으로 더 가독성 있게 코드를 작성해보고자 합니다.</p>","frontmatter":{"title":"[우테코 프리코스] 왜 함수(또는 메소드)의 길이가 15라인을 넘어가지 않도록 구현해야할까","date":"December 02, 2021"}}},"pageContext":{"slug":"/우아한테크코스/[우테코-프리코스]왜-함수(또는-메소드)의-길이가-15라인을-넘어가지-않도록-구현해야할까/","previous":{"fields":{"slug":"/우아한테크코스/[우테코-프리코스]1주차-회고(2)/"},"frontmatter":{"title":"[우테코 프리코스] 1주차 회고(2)"}},"next":{"fields":{"slug":"/우아한테크코스/[우테코-프리코스]depth는-왜-2까지만-허용할까/"},"frontmatter":{"title":"[우테코 프리코스] depth는 왜 2까지만 허용할까"}}}}}